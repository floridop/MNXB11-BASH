ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
BASH=/bin/bash
BASHOPTS=checkwinsize:cmdhist:expand_aliases:extquote:force_fignore:hostcomplete:interactive_comments:login_shell:progcomp:promptvars:sourcepath
BASH_ALIASES=()
BASH_ARGC=()
BASH_ARGV=()
BASH_CMDS=()
BASH_LINENO=()
BASH_SOURCE=()
BASH_VERSINFO=([0]="4" [1]="1" [2]="2" [3]="2" [4]="release" [5]="x86_64-redhat-linux-gnu")
BASH_VERSION='4.1.2(2)-release'
COLORS=/etc/DIR_COLORS.256color
COLUMNS=122
CVS_RSH=ssh
DIRSTACK=()
DISPLAY=localhost:16.0
EUID=6312
GROUPS=()
G_BROKEN_FILENAMES=1
HISTCONTROL=ignoredups
HISTFILE=/nfs/users/pflorido/.bash_history
HISTFILESIZE=1000
HISTSIZE=1000
HOME=/nfs/users/pflorido
HOSTNAME=pptest-iridium.lunarc.lu.se
HOSTTYPE=x86_64
ID=6312
IFS=$' \t\n'
LANG=en_US.UTF-8
LC_ADDRESS=sv_SE.UTF-8
LC_IDENTIFICATION=sv_SE.UTF-8
LC_MEASUREMENT=sv_SE.UTF-8
LC_MONETARY=sv_SE.UTF-8
LC_NAME=sv_SE.UTF-8
LC_NUMERIC=sv_SE.UTF-8
LC_PAPER=sv_SE.UTF-8
LC_TELEPHONE=sv_SE.UTF-8
LC_TIME=sv_SE.UTF-8
LESSOPEN='||/usr/bin/lesspipe.sh %s'
LINES=26
LOADEDMODULES=
LOGNAME=pflorido
LS_COLORS='rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lz=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.bz=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.rar=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:'
MACHTYPE=x86_64-redhat-linux-gnu
MAIL=/var/spool/mail/pflorido
MAILCHECK=60
MNXB01DIR=/nfs/shared/pp/MNXB01/
MODULEPATH=/usr/share/Modules/modulefiles:/etc/modulefiles:/nfs/software/np/modulefiles:/nfs/software/pp/modulefiles:/nfs/software/common/modulefiles
MODULESHOME=/usr/share/Modules
OLDPWD=/nfs/users/pflorido/git/MNXB01-2020/floridopag/tutorial3/exercises
OPTERR=1
OPTIND=1
OSTYPE=linux-gnu
PATH=/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/nfs/software/common/bin
PIPESTATUS=([0]="0")
PPID=24103
PROMPT_COMMAND='printf "\033]0;%s@%s:%s\007" "${USER}" "${HOSTNAME%%.*}" "${PWD/#$HOME/~}"'
PS1='[\u@\h \W]\$ '
PS2='> '
PS4='+ '
PWD=/nfs/users/pflorido/git/MNXB01-2020/floridopag/tutorial3/exercises/ex3.17
SELINUX_LEVEL_REQUESTED=
SELINUX_ROLE_REQUESTED=
SELINUX_USE_CURRENT_RANGE=
SHELL=/bin/bash
SHELLOPTS=braceexpand:emacs:hashall:histexpand:history:interactive-comments:monitor
SHLVL=1
SSH_ASKPASS=/usr/libexec/openssh/gnome-ssh-askpass
SSH_CLIENT='90.224.49.131 53944 22'
SSH_CONNECTION='90.224.49.131 53944 194.47.223.153 22'
SSH_TTY=/dev/pts/8
TERM=xterm-256color
UID=6312
USER=pflorido
VO_ATLAS_SW_DIR=/cvmfs/atlas.cern.ch/repo/sw
_=solution/commands_to_run
colors=/nfs/users/pflorido/.dircolors
shell=bash
__udisks () 
{ 
    local IFS='
';
    local cur="${COMP_WORDS[COMP_CWORD]}";
    if [ "${COMP_WORDS[$(($COMP_CWORD - 1))]}" = "--show-info" ]; then
        COMPREPLY=($(compgen -W "$(udisks --enumerate-device-files)" -- $cur));
    else
        if [ "${COMP_WORDS[$(($COMP_CWORD - 1))]}" = "--inhibit-polling" ]; then
            COMPREPLY=($(compgen -W "$(udisks --enumerate-device-files)" -- $cur));
        else
            if [ "${COMP_WORDS[$(($COMP_CWORD - 1))]}" = "--mount" ]; then
                COMPREPLY=($(compgen -W "$(udisks --enumerate-device-files)" -- $cur));
            else
                if [ "${COMP_WORDS[$(($COMP_CWORD - 1))]}" = "--unmount" ]; then
                    COMPREPLY=($(compgen -W "$(udisks --enumerate-device-files)" -- $cur));
                else
                    if [ "${COMP_WORDS[$(($COMP_CWORD - 1))]}" = "--detach" ]; then
                        COMPREPLY=($(compgen -W "$(udisks --enumerate-device-files)" -- $cur));
                    else
                        if [ "${COMP_WORDS[$(($COMP_CWORD - 1))]}" = "--ata-smart-refresh" ]; then
                            COMPREPLY=($(compgen -W "$(udisks --enumerate-device-files)" -- $cur));
                        else
                            if [ "${COMP_WORDS[$(($COMP_CWORD - 1))]}" = "--ata-smart-simulate" ]; then
                                _filedir || return 0;
                            else
                                if [ "${COMP_WORDS[$(($COMP_CWORD - 1))]}" = "--set-spindown" ]; then
                                    COMPREPLY=($(compgen -W "$(udisks --enumerate-device-files)" -- $cur));
                                else
                                    if [ "${COMP_WORDS[$(($COMP_CWORD - 1))]}" = "--poll-for-media" ]; then
                                        COMPREPLY=($(compgen -W "$(udisks --enumerate-device-files)" -- $cur));
                                    else
                                        COMPREPLY=($(IFS=: compgen -W "--dump:--inhibit-polling:--inhibit-all-polling:--enumerate:--enumerate-device-files:--monitor:--monitor-detail:--show-info:--help:--mount:--mount-fstype:--mount-options:--unmount:--unmount-options:--detach:--detach-options:--ata-smart-refresh:--ata-smart-wakeup:--ata-smart-simulate:--set-spindown:--set-spindown-all:--spindown-timeout:--poll-for-media" -- $cur));
                                    fi;
                                fi;
                            fi;
                        fi;
                    fi;
                fi;
            fi;
        fi;
    fi
}
_module () 
{ 
    local cur="$2" prev="$3" cmds opts;
    COMPREPLY=();
    cmds="add apropos avail clear display help	      initadd initclear initlist initprepend initrm initswitch	      keyword list load purge refresh rm show swap switch	      unload unuse update use whatis";
    opts="-c -f -h -i -l -s -t -u -v -H -V	      --create --force  --help  --human   --icase	      --long   --silent --terse --userlvl --verbose --version";
    case "$prev" in 
        add | load)
            COMPREPLY=($(compgen -W "$(_module_not_yet_loaded)" -- "$cur"))
        ;;
        rm | remove | unload | switch | swap)
            COMPREPLY=($(IFS=: compgen -W "${LOADEDMODULES}" -- "$cur"))
        ;;
        unuse)
            COMPREPLY=($(IFS=: compgen -W "${MODULEPATH}" -- "$cur"))
        ;;
        use | *-a*)

        ;;
        -u | --userlvl)
            COMPREPLY=($(compgen -W "novice expert advanced" -- "$cur"))
        ;;
        display | help | show | whatis)
            COMPREPLY=($(compgen -W "$(_module_avail)" -- "$cur"))
        ;;
        *)
            if test $COMP_CWORD -gt 2; then
                _module_long_arg_list "$cur";
            else
                case "$cur" in 
                    ls)
                        COMPREPLY="list"
                    ;;
                    r*)
                        COMPREPLY="rm"
                    ;;
                    sw*)
                        COMPREPLY="switch"
                    ;;
                    -*)
                        COMPREPLY=($(compgen -W "$opts" -- "$cur"))
                    ;;
                    *)
                        COMPREPLY=($(compgen -W "$cmds" -- "$cur"))
                    ;;
                esac;
            fi
        ;;
    esac
}
_module_avail () 
{ 
    /usr/bin/modulecmd bash -t avail 2>&1 | sed '
		/:$/d;
		/:ERROR:/d;
		s#^\(.*\)/\(.\+\)(default)#\1\n\1\/\2#;
		s#/(default)##g;
		s#/*$##g;'
}
_module_long_arg_list () 
{ 
    local cur="$1" i;
    if [[ ${COMP_WORDS[COMP_CWORD-2]} == sw* ]]; then
        COMPREPLY=($(compgen -W "$(_module_not_yet_loaded)" -- "$cur"));
        return;
    fi;
    for ((i = COMP_CWORD - 1; i > 0; i--))
    do
        case ${COMP_WORDS[$i]} in 
            add | load)
                COMPREPLY=($(compgen -W "$(_module_not_yet_loaded)" -- "$cur"));
                break
            ;;
            rm | remove | unload | switch | swap)
                COMPREPLY=($(IFS=: compgen -W "${LOADEDMODULES}" -- "$cur"));
                break
            ;;
        esac;
    done
}
_module_not_yet_loaded () 
{ 
    comm -23 <(_module_avail|sort) <(tr : '\n' <<<${LOADEDMODULES}|sort)
}
module () 
{ 
    eval `/usr/bin/modulecmd bash $*`
}
